{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOHUZ2Wb7CG4UClwCzf1FEl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/salimyahuza/StudySprint-Tracker/blob/main/streamlit_study_tracker.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_9ShATGA2DDL"
      },
      "outputs": [],
      "source": [
        "# streamlit_study_tracker.py\n",
        "\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import random\n",
        "from datetime import datetime\n",
        "import os\n",
        "\n",
        "st.set_page_config(page_title=\"üìö Student Study Tracker\", layout=\"centered\")\n",
        "st.title(\"üìö Student Study Tracker\")\n",
        "\n",
        "# -- Load motivational quotes --\n",
        "quotes = [\n",
        "    \"Success doesn‚Äôt come from what you do occasionally, it comes from what you do consistently.\",\n",
        "    \"Don‚Äôt watch the clock; do what it does. Keep going.\",\n",
        "    \"Small progress is still progress.\",\n",
        "    \"Push yourself, because no one else is going to do it for you.\",\n",
        "    \"It‚Äôs not about having time, it‚Äôs about making time.\",\n",
        "    \"The only way to do great work is to love what you do.\",\n",
        "    \"Your present circumstances don't determine where you can go; they merely determine where you start.\",\n",
        "    \"Fall seven times, stand up eight.\",\n",
        "    \"An investment in knowledge pays the best interest.\",\n",
        "    \"The expert in anything was once a beginner.\"\n",
        "]\n",
        "\n",
        "st.subheader(\"‚ú® Quote of the Day\")\n",
        "st.info(random.choice(quotes))\n",
        "\n",
        "# -- Input form --\n",
        "st.subheader(\"üìù Log Today's Study Session\")\n",
        "with st.form(\"log_form\"):\n",
        "    subject = st.text_input(\"Subject/Topic\")\n",
        "    hours = st.number_input(\"Hours Studied\", min_value=0.0, step=0.5)\n",
        "    what_learned = st.text_area(\"What did you learn today?\")\n",
        "    challenges = st.text_area(\"Any challenges?\")\n",
        "    submitted = st.form_submit_button(\"Save Entry\")\n",
        "\n",
        "log_file = \"study_log.csv\"\n",
        "\n",
        "if os.path.exists(log_file):\n",
        "    df = pd.read_csv(log_file)\n",
        "else:\n",
        "    df = pd.DataFrame(columns=['Date', 'Subject', 'Hours Studied', 'What You Learned', 'Challenges Faced'])\n",
        "\n",
        "if submitted:\n",
        "    new_entry = {\n",
        "        'Date': datetime.now().strftime(\"%Y-%m-%d\"),\n",
        "        'Subject': subject,\n",
        "        'Hours Studied': hours,\n",
        "        'What You Learned': what_learned,\n",
        "        'Challenges Faced': challenges\n",
        "    }\n",
        "    df = pd.concat([df, pd.DataFrame([new_entry])], ignore_index=True)\n",
        "    df.to_csv(log_file, index=False)\n",
        "    st.success(\"‚úÖ Entry saved successfully!\")\n",
        "\n",
        "# -- Filter logs --\n",
        "st.subheader(\"üîç Search Study Logs\")\n",
        "search_term = st.text_input(\"Enter subject or date (YYYY-MM-DD)\")\n",
        "\n",
        "if search_term:\n",
        "    try:\n",
        "        filtered = df[df['Date'] == pd.to_datetime(search_term).strftime('%Y-%m-%d')]\n",
        "    except:\n",
        "        filtered = df[df['Subject'].str.contains(search_term, case=False, na=False)]\n",
        "\n",
        "    if not filtered.empty:\n",
        "        st.write(filtered)\n",
        "    else:\n",
        "        st.warning(\"No matching study sessions found.\")\n",
        "\n",
        "# -- Visualizations --\n",
        "st.subheader(\"üìä Visualize Study Progress\")\n",
        "if not df.empty:\n",
        "    df['Date'] = pd.to_datetime(df['Date'], errors='coerce')\n",
        "\n",
        "    tab1, tab2 = st.tabs([\"üìà Hours Over Time\", \"üìö Subjects Frequency\"])\n",
        "\n",
        "    with tab1:\n",
        "        fig, ax = plt.subplots(figsize=(10, 4))\n",
        "        sns.lineplot(data=df, x=\"Date\", y=\"Hours Studied\", marker=\"o\", ax=ax)\n",
        "        ax.set_title(\"Daily Hours Studied\")\n",
        "        ax.grid(True)\n",
        "        plt.xticks(rotation=45)\n",
        "        st.pyplot(fig)\n",
        "\n",
        "    with tab2:\n",
        "        fig, ax = plt.subplots(figsize=(10, 4))\n",
        "        sns.countplot(data=df, x=\"Subject\", order=df['Subject'].value_counts().index, ax=ax)\n",
        "        plt.xticks(rotation=45)\n",
        "        ax.set_title(\"Study Frequency by Subject\")\n",
        "        st.pyplot(fig)\n",
        "\n",
        "# -- Export --\n",
        "st.subheader(\"üì§ Export Logs\")\n",
        "st.download_button(\"Download CSV\", data=df.to_csv(index=False), file_name=\"study_log.csv\", mime=\"text/csv\")\n",
        "\n",
        "# -- Footer --\n",
        "st.markdown(\"---\")\n",
        "st.caption(\"Made with ‚ù§Ô∏è by Salim. Track your progress, stay consistent, and never stop learning!\")\n"
      ]
    }
  ]
}